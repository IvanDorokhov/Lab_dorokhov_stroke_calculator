2023-01-12 02:16:57,884:INFO:Initializing predict_model()
2023-01-12 02:16:57,885:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='classification',
                                      target='stroke')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    targ...
                ('scaling', 'passthrough'), ('P_transform', 'passthrough'),
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='stroke')),
                ('fix_perfect', Remove_100(target='stroke')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model', GaussianNB()]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=1, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2023-01-12 02:16:57,885:INFO:Checking exceptions
2023-01-12 02:16:57,885:INFO:Preloading libraries
2023-01-12 02:20:21,763:INFO:Initializing predict_model()
2023-01-12 02:20:21,763:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='classification',
                                      target='stroke')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    targ...
                ('scaling', 'passthrough'), ('P_transform', 'passthrough'),
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='stroke')),
                ('fix_perfect', Remove_100(target='stroke')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model', GaussianNB()]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=1, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2023-01-12 02:20:21,763:INFO:Checking exceptions
2023-01-12 02:20:21,763:INFO:Preloading libraries
2023-01-12 02:20:43,117:INFO:Initializing predict_model()
2023-01-12 02:20:43,117:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='classification',
                                      target='stroke')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    targ...
                ('scaling', 'passthrough'), ('P_transform', 'passthrough'),
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='stroke')),
                ('fix_perfect', Remove_100(target='stroke')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model', GaussianNB()]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=1, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2023-01-12 02:20:43,117:INFO:Checking exceptions
2023-01-12 02:20:43,117:INFO:Preloading libraries
2023-01-12 02:22:36,562:INFO:Initializing predict_model()
2023-01-12 02:22:36,562:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='classification',
                                      target='stroke')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    targ...
                ('scaling', 'passthrough'), ('P_transform', 'passthrough'),
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='stroke')),
                ('fix_perfect', Remove_100(target='stroke')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model', GaussianNB()]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=1, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2023-01-12 02:22:36,562:INFO:Checking exceptions
2023-01-12 02:22:36,562:INFO:Preloading libraries
2023-01-12 02:22:58,119:INFO:Initializing predict_model()
2023-01-12 02:22:58,119:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='classification',
                                      target='stroke')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    targ...
                ('scaling', 'passthrough'), ('P_transform', 'passthrough'),
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='stroke')),
                ('fix_perfect', Remove_100(target='stroke')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model', GaussianNB()]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=1, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2023-01-12 02:22:58,120:INFO:Checking exceptions
2023-01-12 02:22:58,120:INFO:Preloading libraries
2023-01-12 02:23:06,447:INFO:Initializing predict_model()
2023-01-12 02:23:06,447:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='classification',
                                      target='stroke')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    targ...
                ('scaling', 'passthrough'), ('P_transform', 'passthrough'),
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='stroke')),
                ('fix_perfect', Remove_100(target='stroke')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model', GaussianNB()]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=1, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2023-01-12 02:23:06,447:INFO:Checking exceptions
2023-01-12 02:23:06,447:INFO:Preloading libraries
2023-01-12 02:23:14,047:INFO:Initializing predict_model()
2023-01-12 02:23:14,048:INFO:predict_model(estimator=Pipeline(steps=[('dtypes',
                 DataTypes_Auto_infer(ml_usecase='classification',
                                      target='stroke')),
                ('imputer',
                 Simple_Imputer(categorical_strategy='not_available',
                                fill_value_categorical=None,
                                fill_value_numerical=None,
                                numeric_strategy='mean',
                                target_variable=None)),
                ('new_levels1',
                 New_Catagorical_Levels_in_TestData(replacement_strategy='least '
                                                                         'frequent',
                                                    targ...
                ('scaling', 'passthrough'), ('P_transform', 'passthrough'),
                ('binn', 'passthrough'), ('rem_outliers', 'passthrough'),
                ('cluster_all', 'passthrough'),
                ('dummy', Dummify(target='stroke')),
                ('fix_perfect', Remove_100(target='stroke')),
                ('clean_names', Clean_Colum_Names()),
                ('feature_select', 'passthrough'), ('fix_multi', 'passthrough'),
                ('dfs', 'passthrough'), ('pca', 'passthrough'),
                ['trained_model', GaussianNB()]]), probability_threshold=None, encoded_labels=True, drift_report=False, raw_score=False, round=1, verbose=True, ml_usecase=MLUsecase.REGRESSION, display=None, drift_kwargs=None)
2023-01-12 02:23:14,048:INFO:Checking exceptions
2023-01-12 02:23:14,048:INFO:Preloading libraries
